
@model ScoreMe.UI.Models.SMSSenderInfoVM
@{
    ViewBag.Title = "SMS göndərici məlumatlarının redaktə edilməsi ekranı";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="row">

            <div class="col-md-4">
                @Html.HiddenFor(model => model.ID)
                @Html.LabelFor(model => model.ActivityTypeEVID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(x => Model.ActivityTypeEVID, new SelectList(Model.ActivityTypeList, "Value", "Text"), htmlAttributes: new { @class = "select2 form-control", tabindex = 1 })
                @Html.ValidationMessageFor(model => model.ActivityTypeEVID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.IsParse, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(x => Model.IsParse, new SelectList(Model.IsParseList, "Value", "Text"), htmlAttributes: new { @class = "select2 form-control", tabindex = 2 })
                @Html.ValidationMessageFor(model => model.IsParse, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.SenderName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.SenderName, new { htmlAttributes = new { @class = "form-control", tabindex = 3 } })
                @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })

            </div>
            <div class="clearfix"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", tabindex = 4 } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", tabindex = 5 } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", tabindex = 6 } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Point, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Point, new { htmlAttributes = new { @class = "form-control", tabindex = 7 } })
                @Html.ValidationMessageFor(model => model.Point, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Cheque, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Cheque, new { htmlAttributes = new { @class = "form-control", tabindex = 8 } })
                @Html.ValidationMessageFor(model => model.Cheque, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-6 control-label">
                @Html.ActionLink("Listə Geri Dön", "Index", "SMSSenderInfo", null, new { @class = "btn btn-primary btn-lg btn-block" })
            </div>
            <div class="col-md-6 control-label">
                <input id="frmPosition" type="submit" value="Dəyiş" class="btn btn-primary btn-lg btn-block" tabindex="9" />
            </div>
        </div>
    </div>
}



<script>
        function FillInOutType() {
            var operatorChanelTypeEVID = $('#OperatorChanelTypeEVID').val();
            $.ajax({
                url: '/OperatorInformation/FillInOutType',
                type: "GET",
                dataType: "JSON",
                data: { chanelTypeEVID: operatorChanelTypeEVID },
                success: function (InOutTypeList) {
                    $("#InOutTypeEVID").html(""); // clear before appending new list
                    $.each(InOutTypeList, function (i, item) {
                        $("#InOutTypeEVID").append(
                            $('<option></option>').val(item.Value).html(item.Text));
                    });
                }
            });
        }
</script>

